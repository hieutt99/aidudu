version: '3.3'

services:
    backend:
        build: 
            context: ./backend
            dockerfile: dockerfile
        image: aidudu:dev
        command: >
            sh -c "python -m gunicorn aidudu.wsgi:application --bind=0.0.0.0:8000 --reload -w 4"
        env_file: 
            - ./backend/.env_files/backend.dev.env
        volumes:
            - ./backend:/backend
        ports: 
            - 8000:8000
        depends_on:
            - database
            - redis
            - worker
            - scheduler
    database:
        image: postgres
        environment:
            - POSTGRES_DB=aidudu
            - POSTGRES_USER=aidudu
            - POSTGRES_PASSWORD=aidudu@20211
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
    redis:
        image: redis
        volumes:
            - redis_data:/data
    worker:
        build: 
            context: ./backend
            dockerfile: dockerfile
        image: aidudu:dev
        volumes:
            - ./backend:/backend
        environment:
            - DEBUG=false
        env_file: 
            - ./backend/.env_files/backend.dev.env
        command: celery --app=aidudu worker --autoscale=4,1 -l DEBUG
    scheduler:
        build:
            context: ./backend
            dockerfile: dockerfile
        image: aidudu:dev
        volumes:
            - ./backend:/backend
        environment:
            - DEBUG=false
        env_file:
            - ./backend/.env_files/backend.dev.env
        command: celery --app=aidudu beat -l DEBUG
<<<<<<< HEAD
    # frontend:
    #     build: ./frontend
    #     container_name: frontend
    #     image: frontend:1.0
    #     ports:
    #       - "3000:3000"
    #     volumes:
    #       - ./frontend/:/app
    #       - /app/node_modules
    #     depends_on:
    #       - backend
    #     restart: always
=======
>>>>>>> frontend
volumes:
    postgres_data:
    redis_data:
